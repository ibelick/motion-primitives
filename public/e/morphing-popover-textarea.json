{
  "name": "morphing-popover-textarea",
  "type": "registry:example",
  "componentName": "morphing-popover",
  "description": "Morphing popover integrated with a textarea input.",
  "files": [
    {
      "path": "morphing-popover-textarea.tsx",
      "content": "'use client';\nimport {\n  MorphingPopover,\n  MorphingPopoverTrigger,\n  MorphingPopoverContent,\n} from '@/components/core/morphing-popover';\nimport { motion } from 'motion/react';\nimport { useId, useState } from 'react';\nimport { ArrowLeftIcon } from 'lucide-react';\n\nexport function MorphingPopoverTextarea() {\n  const uniqueId = useId();\n  const [note, setNote] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n\n  const closeMenu = () => {\n    setNote('');\n    setIsOpen(false);\n  };\n\n  return (\n    <MorphingPopover\n      transition={{\n        type: 'spring',\n        bounce: 0.05,\n        duration: 0.3,\n      }}\n      open={isOpen}\n      onOpenChange={setIsOpen}\n    >\n      <MorphingPopoverTrigger className='flex h-9 items-center rounded-lg border border-zinc-950/10 bg-white px-3 text-zinc-950 dark:border-zinc-50/10 dark:bg-zinc-700 dark:text-zinc-50'>\n        <motion.span layoutId={`popover-label-${uniqueId}`} className='text-sm'>\n          Add Note\n        </motion.span>\n      </MorphingPopoverTrigger>\n      <MorphingPopoverContent className='rounded-xl border border-zinc-950/10 bg-white p-0 shadow-[0_9px_9px_0px_rgba(0,0,0,0.01),_0_2px_5px_0px_rgba(0,0,0,0.06)] dark:bg-zinc-700'>\n        <div className='h-[200px] w-[364px]'>\n          <form\n            className='flex h-full flex-col'\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <motion.span\n              layoutId={`popover-label-${uniqueId}`}\n              aria-hidden='true'\n              style={{\n                opacity: note ? 0 : 1,\n              }}\n              className='absolute top-3 left-4 text-sm text-zinc-500 select-none dark:text-zinc-400'\n            >\n              Add Note\n            </motion.span>\n            <textarea\n              className='h-full w-full resize-none rounded-md bg-transparent px-4 py-3 text-sm outline-hidden'\n              autoFocus\n              onChange={(e) => setNote(e.target.value)}\n            />\n            <div key='close' className='flex justify-between py-3 pr-4 pl-2'>\n              <button\n                type='button'\n                className='flex items-center rounded-lg bg-white px-2 py-1 text-sm text-zinc-950 hover:bg-zinc-100 dark:bg-zinc-700 dark:text-zinc-50 dark:hover:bg-zinc-600'\n                onClick={closeMenu}\n                aria-label='Close popover'\n              >\n                <ArrowLeftIcon\n                  size={16}\n                  className='text-zinc-900 dark:text-zinc-100'\n                />\n              </button>\n              <button\n                className='relative ml-1 flex h-8 shrink-0 scale-100 appearance-none items-center justify-center rounded-lg border border-zinc-950/10 bg-transparent px-2 text-sm text-zinc-500 transition-colors select-none hover:bg-zinc-100 hover:text-zinc-800 focus-visible:ring-2 active:scale-[0.98] dark:border-zinc-50/10 dark:text-zinc-50 dark:hover:bg-zinc-800'\n                type='submit'\n                aria-label='Submit note'\n                onClick={() => {\n                  closeMenu();\n                }}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </MorphingPopoverContent>\n    </MorphingPopover>\n  );\n}\n",
      "type": "registry:example"
    },
    {
      "path": "textarea.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea }; \n",
      "type": "registry:example"
    }
  ]
}