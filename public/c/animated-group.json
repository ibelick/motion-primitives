{
  "name": "animated-group",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "animated-group.tsx",
      "content": "'use client';\nimport { ReactNode } from 'react';\nimport { motion, Variants } from 'motion/react';\nimport React from 'react';\n\ntype PresetType =\n  | 'fade'\n  | 'slide'\n  | 'scale'\n  | 'blur'\n  | 'blur-slide'\n  | 'zoom'\n  | 'flip'\n  | 'bounce'\n  | 'rotate'\n  | 'swing';\n\ntype AnimatedGroupProps = {\n  children: ReactNode;\n  className?: string;\n  variants?: {\n    container?: Variants;\n    item?: Variants;\n  };\n  preset?: PresetType;\n};\n\nconst defaultContainerVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nconst defaultItemVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n};\n\nconst presetVariants: Record<\n  PresetType,\n  { container: Variants; item: Variants }\n> = {\n  fade: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0 },\n      visible: { opacity: 1 },\n    },\n  },\n  slide: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, y: 20 },\n      visible: { opacity: 1, y: 0 },\n    },\n  },\n  scale: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, scale: 0.8 },\n      visible: { opacity: 1, scale: 1 },\n    },\n  },\n  blur: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, filter: 'blur(4px)' },\n      visible: { opacity: 1, filter: 'blur(0px)' },\n    },\n  },\n  'blur-slide': {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, filter: 'blur(4px)', y: 20 },\n      visible: { opacity: 1, filter: 'blur(0px)', y: 0 },\n    },\n  },\n  zoom: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, scale: 0.5 },\n      visible: {\n        opacity: 1,\n        scale: 1,\n        transition: { type: 'spring', stiffness: 300, damping: 20 },\n      },\n    },\n  },\n  flip: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, rotateX: -90 },\n      visible: {\n        opacity: 1,\n        rotateX: 0,\n        transition: { type: 'spring', stiffness: 300, damping: 20 },\n      },\n    },\n  },\n  bounce: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, y: -50 },\n      visible: {\n        opacity: 1,\n        y: 0,\n        transition: { type: 'spring', stiffness: 400, damping: 10 },\n      },\n    },\n  },\n  rotate: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, rotate: -180 },\n      visible: {\n        opacity: 1,\n        rotate: 0,\n        transition: { type: 'spring', stiffness: 200, damping: 15 },\n      },\n    },\n  },\n  swing: {\n    container: defaultContainerVariants,\n    item: {\n      hidden: { opacity: 0, rotate: -10 },\n      visible: {\n        opacity: 1,\n        rotate: 0,\n        transition: { type: 'spring', stiffness: 300, damping: 8 },\n      },\n    },\n  },\n};\n\nfunction AnimatedGroup({\n  children,\n  className,\n  variants,\n  preset,\n}: AnimatedGroupProps) {\n  const selectedVariants = preset\n    ? presetVariants[preset]\n    : { container: defaultContainerVariants, item: defaultItemVariants };\n  const containerVariants = variants?.container || selectedVariants.container;\n  const itemVariants = variants?.item || selectedVariants.item;\n\n  return (\n    <motion.div\n      initial='hidden'\n      animate='visible'\n      variants={containerVariants}\n      className={className}\n    >\n      {React.Children.map(children, (child, index) => (\n        <motion.div key={index} variants={itemVariants}>\n          {child}\n        </motion.div>\n      ))}\n    </motion.div>\n  );\n}\n\nexport { AnimatedGroup };\n",
      "type": "registry:ui"
    }
  ]
}